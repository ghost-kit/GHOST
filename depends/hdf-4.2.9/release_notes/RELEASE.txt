HDF version 4.2.9 released on 2013-02-07
=============================================

INTRODUCTION

This document describes the differences between HDF 4.2.8 and HDF 4.2.9.
It is written for people who are familiar with previous releases of HDF 
and wish to migrate to HDF 4.2.9.

The HDF 4.2.9 documentation can be found on the The HDF Group's website
at:
    http://www.hdfgroup.org/doc.html

Previous versions of the documentation are available from the FTP server:

    ftp://ftp.hdfgroup.org/HDF/Documentation/

First-time HDF users are encouraged to read the HDF FAQ, which can be
reached from the HDF product home page:
  
    http://hdfgroup.org/products/hdf4/

If you have any questions or comments, please see the HDF Support page:

    http://hdfgroup.org/services/support.html

CONTENTS

- New features and changes
  -- Configuration
- Support for new platforms and compilers
- Bugs fixed since HDF 4.2.8
  -- Configuration
  -- Library
  -- Utilities
- Documentation
- Platforms tested
- Known problems


New features and changes
========================
   Configuration
   ============= 
   - The macro H4_NO_DEPRECATED_SYMBOLS was added to handle deprecated
     functions/features.  To use deprecated functions/features, the library
     must be configured with option HDF4_ENABLE_DEPRECATED_SYMBOLS.
     (ADB, BMR 2013/1/25)
     

Support for new platforms and compilers
=======================================
   - Ported to Mac OSX 10.8 (Mountain Lion) with Clang as the default C
     compiler. (AKC 2013/1/19)

   - Ported to Mac OSX 10.8 (Mountain Lion) with Intel compilers.
               (EIP 2013/02/05)

Bugs fixed since HDF 4.2.8
=========================
   Configuration
   =============
   - Cygwin >= 1.7.7; The SunRPC of the glibc has been replaced by a TI-RPC 
     (Transport Independent RPC) library to support IPv6. Configure has been 
     updated to look for the tirpc library instead of rpc. (ADB 2012/11/09)

   Library
   ========= 
   - SDgetcompress is now deprecated and not available by default.  Its
     availability can be activated using option HDF4_ENABLE_DEPRECATED_SYMBOLS.
     (BMR 2012/1/25)
   - Some memory leaks were fixed. (BMR 2012/10/01)

   Utilities
   ========= 
   - Vnattrs/Vattrinfo/Vgetattr are replaced with Vnattrs2/Vattrinfo2/Vgetattr2
     in various tools to ensure attributes that are not created by Vsetattr
     can still be detected and accessed.  The Reference Manual and User's Guide
     provide details about this issue. (BMR 2012/12/25)


Documentation
=============
   - The Reference Manual and User's Guide have minor updates.
   - The Specification and Developer's Guide is extensively updated.


Platforms tested
================

This version has been tested in the following platforms:

   Linux 2.6.32-279.19.1         gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4)
   .el6.ppc64 #1                 GNU Fortran (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4)
   SMP ppc64 GNU/Linux           IBM XL Fortran for Linux, V13.1 (64-bit mode)
   (ostrich)

   Linux 2.6.18-308.13.1.el5 #1  gcc (GCC) 4.1.2 20080704 (Red Hat 4.1.2-52)
      SMP i686 i386              GNU Fortran (GCC) 4.1.2 20080704
   (jam)                             (Red Hat 4.1.2-52)
                                 pgcc and pgf90 11.9-0 32-bit target 
                                 on x86 Linux -tp penryn
                                 Intel(R) C Compiler, Version 12.1.0 20110811
                                 Intel(R) Fortran Compiler, Version 12.1.0

   Linux 2.6.18-308.24.1.el5 #1  gcc (GCC) 4.1.2 20080704 (Red Hat 4.1.2-52)
      SMP x86_64 GNU/Linux       GNU Fortran (GCC) 4.1.2 20080704 
   (koala)                           (Red Hat 4.1.2-52)
                                 icc (ICC) 12.1.0 20110811
                                 ifort (IFORT) 12.1.0 20110811
                                 pgcc and pgf90 11.9-0 64-bit target 
                                 on x86-64 Linux -tp nehalem

   SunOS 5.10 32- and 64-bit     Sun C 5.9 SunOS_sparc Patch 124867-16 2010/08/11 
   (linew)                       Sun Fortran 95 8.3 SunOS_sparc Patch 127000-13 2010/01/26
                                 Sun C 5.11 SunOS_sparc 2010/08/13
                                 Sun Fortran 95 8.5 SunOS_sparc 2010/08/13

   SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc 2011/11/16 
   (emu)                              (see "Known problem" section)
                                 Sun Fortran 95 8.6 SunOS_sparc 2011/11/16

   Windows 7                     Visual Studio 2008 w/ Intel Fortran 11.1 (cmake)
                                 Visual Studio 2010 w/ Intel Fortran 12 (cmake)
                                 Cygwin(CYGWIN_NT-6.1 1.7.15(0.260/5/3) gcc(4.5.3)
                                      compiler and gfortran)

   Windows 7 x64                 Visual Studio 2008 w/ Intel Fortran 11.1 (cmake)
                                 Visual Studio 2010 w/ Intel Fortran 12 (cmake)
                                 Cygwin(CYGWIN_NT-6.1 1.7.15(0.260/5/3) gcc(4.5.3)
                                      compiler and gfortran)

   MAC OS X Intel 10.6.8         icc (ICC) 12.1 Build 20120928
   (64-bit)                      ifort (IFORT) 12.1 Build 20120928
   Darwin 10.8.0                 i686-apple-darwin10-gcc-4.2.1 (GCC) 4.2.1
   (fred)                        GNU Fortran (GCC) 4.6.2 20111019
                                 Apple clang version 1.7 (tags/Apple/clang-77)
                                 (based on LLVM 2.9svn)
                             
   MAC OS X Intel 10.7.5         i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1
   (64 bit)                      GNU Fortran (GCC) 4.6.2 20111019
   Darwin 11.4.2                 icc and ifort Version 13.0 Build 20121010              
   (duck)                        Apple clang version 3.0
                                 (tags/Apple/clang-211.12) (based on LLVM 3.0svn)

   Mac OS X 10.8.2               Apple LLVM version 4.2 (clang-425.0.24) 
   Darwin 12.2.0                 gcc i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 
   (wren)                        gfortran GNU Fortran (GCC) 4.6.2
                                 icc and ifort Version 13.0.1.119 Build 20121010

   Debian6.0.3 2.6.32-5-686 #1 SMP i686 GNU/Linux
                                 gcc (Debian 4.4.5-8) 4.4.5
                                 GNU Fortran (Debian 4.4.5-8) 4.4.5

   Debian6.0.3 2.6.32-5-amd64 #1 SMP x86_64 GNU/Linux
                                 gcc (Debian 4.4.5-8) 4.4.5
                                 GNU Fortran (Debian 4.4.5-8) 4.4.5

   Fedora17 3.5.2-1.fc17.i6866 #1 SMP i686 i686 i386 GNU/Linux
                                 gcc (GCC) 4.7.0 20120507 (Red Hat 4.7.0-5)
                                 GNU Fortran (GCC) 4.7.0 20120507 (Red Hat 4.7.0-5)

   Fedora17 3.5.2-1.fc17.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux
                                 gcc (GCC) 4.7.0 20120507 (Red Hat 4.7.0-5)
                                 GNU Fortran (GCC) 4.7.0 20120507 (Red Hat 4.7.0-5)

   SUSE 12.2 3.4.6-2.10-desktop #1 SMP PREEMPT i686 i686 i386 GNU/Linux
                                 gcc (SUSE Linux) 4.7.1
                                 GNU Fortran (SUSE Linux) 4.7.1

   SUSE 12.2 3.4.6-2.10-desktop #1 SMP PREEMPT x86_64 x86_64 x86_64 GNU/Linux
                                 gcc (SUSE Linux) 4.7.1
                                 GNU Fortran (SUSE Linux) 4.7.1 

   Ubuntu 12.04 3.2.0-29-generic #46-Ubuntu SMP i686 GNU/Linux
                                 gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3
                                 GNU Fortran (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3

   Ubuntu 12.04 3.2.0-29-generic #46-Ubuntu SMP x86_64 GNU/Linux
                                 gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3
                                 GNU Fortran (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3


Known problems
==============
o  On SunOS 5.11, the -xc99 flag has to be used with the cc compiler to avoid
   compilation errors.  Future releases will automatically detect the system and
   add the flag. (HDFFR-1361) EIP - 2013/02/05

o  For Mac OS X 10.7 Lion and on 10.8 Mountain Lion, several tests fail with
   GCC, Intel and Clang compilers.  Currently, this situation is detected and
   -O0 level optimization is used.  We will work on the issue for the next
   release. (HDFFR-1358,1327,1358) EIP - 2013/02/05

o  On IBM PowerPC 64, hdftest fails when gcc 4.4.6 is used with -O3 optimization 
   level. 

o  When building in AIX systems, if CC is xlc with -qlanglvl=ansi, configure
   will fail when checking for the jpeglib.h header due to the duplicated
   macro definition of HAVE_STDLIB_H.  This is because some newer builds
   of the jpeg library have HAVE_STDLIB_H defined in the jconfig.h header file.
   Without the -qlanglvl=ansi, some older xlc versions (e.g., V7.0) still 
   fail, but newer xlc versions (e.g., V9.0) pass.  AKC - 2010/02/17

o  When building on Linux/UNIX platforms, the szip shared library files must
   be in the system library path.  This can be done by adding a link to
   the libsz.* files in the /usr/lib folder or by adding the library
   location to the LD_LIBRARY_PATH environment variable.
      Ex. export LD_LIBRARY_PATH=path_to_szip_lib:$LD_LIBRARY_PATH
   Optionally, one can use the static szip library files by adding '-static'
   to the CFLAGS environment variable.
   
o  Existing data written by an HDF4 Library prior to HDF 4.2r2:
   When a one-dimensional SDS and a dimension scale have
   the same name, subsequent accesses to the dimension scale or to the
   SDS might produce undesired results because the libraries could not
   distinguish between the two objects.  In the case of writing, data
   might even be corrupted.  For example, SDS data might be written to a
   dimension variable or vice versa.

   HDF4 Library Releases 4.2r2 and later make a distinction between an SDS
   and a dimension variable.  However, as with older versions, these recent
   versions are unable to detect such conflicts in files created by earlier 
   releases.  It is therefore STRONGLY recommended to check for such name 
   duplication before working with data created with a pre-4.2r2 library.

   The functions SDgetnumvars_byname and SDnametoindices are provided
   to help detect such name conflicts and select the correct object to
   access, respectively; see the HDF Reference Manual entries for
   further details.

o  This release does not support VMS systems.

o  N-bit compression is not supported with Fortran APIs.

o  Using both fill-value and compression on SD datasets does not work.

o  When using PGI compilers, make sure that the JPEG library is also compiled 
   with a PGI C compiler; linking with a JPEG library built with gcc causes 
   JPEG library tests to fail.  To bypass the problem:

       x Set LIBS flag to $PGI_JPEG_INSTALL_DIR/lib/libjpeg.a
         where $PGI_JPEG_INSTALL_DIR points to the installation directory
         for the PGI-compiled JPEG library:

         setenv LIBS $PGI_JPEG_INSTALL_DIR/lib/libjpeg.a

       x Use the --with-jpeg=$PGI_JPEG_INSTALL_DIR configure flag to 
         configure with the PGI-compiled JPEG library:

         ./configure --with-jpeg=$PGI_JPEG_INSTALL_DIR --with-zlib....

o  In order for the API SDgetdatasize to get the correct compressed size
   of the data, the dataset needs to be closed (SDendaccess) or read
   (SDreaddata) after being written and before SDgetdatasize is called.
